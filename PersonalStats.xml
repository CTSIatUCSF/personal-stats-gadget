<?xml version="1.0" encoding="UTF-8"?>
<Module>
	<ModulePrefs title="Personal Stats Gadget">
	</ModulePrefs>
	<Content type="html"><![CDATA[

    <style>
    #main {
        margin: 0px;
        padding: 0px;
        font-size: small;
    }
    </style>

	<div id="wrapper">
		<div id="view_count_container"><div>
		<div id="chart_container"></div>
	</div>

	<!-- Include libraries for getting Auth token using JWS -->
	<script type="text/javascript" src="http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js"></script>
	<script type="text/javascript" src="js/json-sans-eval-min.js"></script>
	<script type="text/javascript" src="js/jws-3.2.min.js"></script>
	
	<!--Load the AJAX API-->
	    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
	
	<!--Load the Google JS Client-->
	<script type="text/javascript" src="https://apis.google.com/js/client.js?onload=handleClientLoad"></script>
	
	<!-- Load Google Analytics Embed API Library -->
	<script>
		(function(w,d,s,g,js,fs){
		  g=w.gapi||(w.gapi={});g.analytics={q:[],ready:function(f){this.q.push(f);}};
		  js=d.createElement(s);fs=d.getElementsByTagName(s)[0];
		  js.src='https://apis.google.com/js/platform.js';
		  fs.parentNode.insertBefore(js,fs);js.onload=function(){g.load('analytics');};
		}(window,document,'script'));
	</script>
	
	<script language="JavaScript" type="text/javascript">

		var token, ga_key, data;

        // Load the Visualization API and the column chart package.
        google.load('visualization', '1.0', {'packages':['corechart']});

		// Function that creates and populates a data table,
	    // instantiates the chart, passes in the data and
	    // draws it.
		
	    function drawChart() {
			console.log("drawChart called")
			
			var view_count, view_count_start;
			
	        // Create the data table.
	        var dataTable = new google.visualization.DataTable();
	        dataTable.addColumn('string', 'Month');
	        dataTable.addColumn('number', 'Sessions');
			
			view_count = 0;
			view_count_start = data.rows[0][0].replace("-", " 20");
			for (var i = 0; i < data.rows.length; i++) {
	  		  	row = data.rows[i];
				row[1] = row[1] + 1 - 1; // convert to number
				view_count = view_count + row[1];
				//console.log(row);
				dataTable.addRow(row);
				//console.log(dataTable);
			}

	        // Set chart options
	        var options = {
				legend: {position: 'none'}
		    };

	        // Instantiate and draw our chart, passing in some options.
	        var chart = new google.visualization.ColumnChart(document.getElementById('chart_container'));
	        chart.draw(dataTable, options);
			
			// Set view count text
			var vcc = document.getElementById('view_count_container');
			console.log("view_count before");
			console.log(view_count);
			view_count = view_count.toLocaleString();
			console.log("view_count after");
			console.log(view_count);
			vcc.innerHTML = "Your profile has been viewed " + view_count + " times since " + view_count_start;
      }
	  
	  function getKey(callback) {
	    var request = new XMLHttpRequest();
	    request.open("GET", "./ga_key_ucsf.json", true);
	    request.send(null);
	    request.onreadystatechange = function() {
	      if ( request.readyState === 4 && request.status === 200 ) {
	        ga_key = JSON.parse(request.responseText);
	        <!-- console.log("ga_key"); -->
	        <!-- console.log(ga_key); -->
			callback();
	      }
	    }
	  }
	  

	  function getToken(callback) {
		  	<!-- console.log ("KJUR:"); -->
			<!-- console.log (KJUR); -->

			var pHeader = {"alg":"RS256","typ":"JWT"}
			var sHeader = JSON.stringify(pHeader);

			var pClaim = {};
			pClaim.aud = "https://www.googleapis.com/oauth2/v3/token";
			pClaim.scope = "https://www.googleapis.com/auth/analytics.readonly";
			pClaim.iss = ga_key.client_email;
			pClaim.exp = KJUR.jws.IntDate.get("now + 1hour");
			pClaim.iat = KJUR.jws.IntDate.get("now");

			var sClaim = JSON.stringify(pClaim);
			var key = ga_key.private_key;

			var sJWS = KJUR.jws.JWS.sign(null, sHeader, sClaim, key);

			var XHR = new XMLHttpRequest();
			var urlEncodedData = "";
			var urlEncodedDataPairs = [];

			urlEncodedDataPairs.push(encodeURIComponent("grant_type") + '=' + encodeURIComponent("urn:ietf:params:oauth:grant-type:jwt-bearer"));
			urlEncodedDataPairs.push(encodeURIComponent("assertion") + '=' + encodeURIComponent(sJWS));
			urlEncodedData = urlEncodedDataPairs.join('&').replace(/%20/g, '+');

			// We define what will happen if the data are successfully sent
			XHR.addEventListener('load', function(event) {
			  	var response = JSON.parse(XHR.responseText);
			  	token = response["access_token"]
				<!-- console.log("token"); -->
				<!-- console.log(token); -->
				callback();
			});

			// We define what will happen in case of error
			XHR.addEventListener('error', function(event) {
			    console.log('Oops! Something went wrong.');
			});

			XHR.open('POST', 'https://www.googleapis.com/oauth2/v3/token');
			XHR.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
			XHR.send(urlEncodedData)
	  }
		
	function analyticsStuff() {
		<!-- console.log("Do Analytics Stuff"); -->

		gapi.analytics.auth.authorize({
		 	serverAuth: {
				access_token: token
			}
		});
		
		 var today = new Date();
		 var month_numbers = new Array('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12');
		 var start_date = new Date(today.getFullYear() - 1, today.getMonth(), 1);
		 var start_date_string = start_date.getFullYear() + "-" + month_numbers[start_date.getMonth()] + "-" + "01";
		 console.log(start_date_string);
		 
		 var query = new gapi.analytics.report.Data({
		 	query: {
				'ids': 'ga:23439892',
		    	'metrics': 'ga:sessions',
		        'dimensions': 'ga:yearMonth',
		        'start-date': start_date_string,
		        'end-date': 'yesterday'
		    }
		 });
		 
		 query.execute();
		 
		 query.on('success', function(response) {
		 	data = response;
		    //console.log("query data");
		    //console.log(data);
			
  		  	var months = new Array('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'); 
	  
  		  	var row, old_value, new_value, year, month_number, month;
  		  	for (var i = 0; i < data.rows.length; i++) {
	  		  	row = data.rows[i];
	  			old_value = row[0];
	  			year = old_value.substring(2, 4);
	  			month_number = old_value.substring(4, 6) - 1;
	  			month = months[month_number];
	  			new_value = month + "-" + year;
	  			//console.log(new_value);
	  			row[0] = new_value;
	  		}
			  
  		    //console.log("updated data");
  		    //console.log(data);
			
			drawChart();
		 });
	}
	
	function handleClientLoad() {
		console.log("google client library loaded");
	}
		
  	gapi.analytics.ready( function() {
  		getKey( function () {
  			getToken( function () {
  				analyticsStuff();
  			});
  		})
  	});
	  
    </script>
        ]]></Content>
</Module>
